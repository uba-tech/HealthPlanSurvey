<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddContent.Action" xml:space="preserve">
    <value>Add Content</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>&lt;P&gt;Please visit &lt;a href="http://modulemasters.com"&gt;ModuleMasters.com&lt;/a&gt; for the latest documentation and downloads.</value>
  </data>
  <data name="DefaultContent.Text" xml:space="preserve">
    <value>Here is some sample content</value>
  </data>
  <data name="Template.Text" xml:space="preserve">
    <value>[CONTENT]</value>
  </data>
  <data name="NeedConfig.Text" xml:space="preserve">
    <value>This module needs configured, please go to the settings.  If you have not registered a report server yet, please go to server administration to do so.</value>
  </data>
  <data name="SelectReport.Text" xml:space="preserve">
    <value>Please select a report...</value>
  </data>
  <data name="ServerAdmin.Text" xml:space="preserve">
    <value>Server Administration</value>
  </data>
  <data name="IncorrectConfig.Text" xml:space="preserve">
    <value>It appears the chosen report server is no longer available, please go to module configuration and choose a new one.  If you have recently upgraded to a new major release, you will need to go into the server administration window to retype the password for your report server since the encryption key changes between major versions of the module (e.g. from version 6.X to 7.X).</value>
  </data>
  <data name="Navigation.Text" xml:space="preserve">
    <value>Back to Main Report List</value>
  </data>
  <data name="DeprecatedRS2005Version.Text" xml:space="preserve">
    <value>You are trying to use this module with the 2005 version of Reporting Services that is no longer supported.  You must downgrade to a version of the module which is less than 6.0.  Please contact service@modulemasters.com if you need more information regarding this.</value>
  </data>
  <data name="Culture.Text" xml:space="preserve">
    <value>en-US</value>
    <comment>This setting controls the localization of the report viewer control and is used for handling of the dates.  You must set a standard culture code, please see the MSDN documentation for examples (e.g. en-US, es-PR, etc.)</comment>
  </data>
  <data name="DateFormat.Text" xml:space="preserve">
    <value>m/d/yy</value>
    <comment>This controls the format used for datetime parameters within the report viewer.  The valid values are m/d/yy, d/m/yy, yy/m/d, etc.  Please make sure this format is the same format used by the culture format set here</comment>
  </data>
  <data name="FolderPermissions.Text" xml:space="preserve">
    <value>Report Permissions</value>
  </data>
  <data name="ModuleSettings.Text" xml:space="preserve">
    <value>Module Configuration</value>
  </data>
</root>